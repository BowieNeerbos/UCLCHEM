#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Mar  4 10:56:33 2022

@author: neerbos
"""
import uclchem
import pandas as pd
import matplotlib.pyplot as plt
import time as tm
import numpy as np
import smtplib as sp
from multiprocessing import Pool
import itertools
import os
sender="neerbos@mail.strw.leidenuniv.nl"
rcvr="b.m.k.vanneerbos@outlook.com"
start=tm.time()
count=0

#set a parameter dictionary for phase 1 collapse model
pc,year=30.9E12,3.15e7 #in km, s
outSpecies="SO CO"
density,vs=1e3,30
alldensity=[1e3,1e4,1e5,1e6]
allv=[10,15,20,25,30,35,40,45,50,55,60]
allcrir,allvisex=[0.1,1,10,100],[1,2,5,10] #crir=cosmic ray ion rate, visex=visual extinction
alluv=[0.1,1,10,100] #in Habing






def shocking(params,temp=3,finalTime=1e5,name="J"):
    param_dict = {"phase": 2, "switch": 0, "collapse": 0, "writeStep": 1,
    				    "initialTemp":10.0,"outSpecies": outSpecies,
				    
    				   "baseAv" : 1.0}
    #read old abundances and do cshock behaviour
    #allv,alldensity,allvisex,allcrir,alluv
    vs,density,av,crir,uv=params[0],params[1],params[2],params[3],params[4]
    rout = (av-param_dict["baseAv"])*1.6E21/(density*pc*1E5)
    #change other bits of input to set up phase 2
    param_dict["initialDens"]=density
    param_dict["vs"]=vs		#similar, shock speed in km/s
    param_dict["finalTime"]=finalTime
    param_dict["rout"]=rout
    param_dict["zeta"]=crir
    param_dict["radfield"]=uv
    param_dict["abundLoadFile"]="../output/collapse_outputs/start{}.dat".format(density)
    param_dict["outputFile"]="../output/shock_outputs/{}:{}-{}-{}-{}-{}.dat".format(name,vs,density,av,crir,uv)
    #name scheme: ShockType:vs-density,av,crir,uv
    #so eg: C:40-1000-5-0.1-10
    if not os.path.exists(param_dict["outputFile"]):
        uclchem.run_model(param_dict)
    else:
        print("Skipped",param_dict["outputFile"])




def rungrid():
         #indent  everything below line 206			
        alldensity=[1e3,1e4,1e5,1e6]
        allv=[10,15,20,25,30,35,40,45,50,55,60]
        allcrir,allvisex=[0.1,1,10,100],[1,2,5,10] #crir=cosmic ray ion rate, visex=visual extinction
        alluv=[0.1,1,10,100] #in Habing
        paramlist=list(itertools.product(allv,alldensity,allvisex,allcrir,alluv))	
        pool=Pool(32)
        res=pool.map(shocking,paramlist)

if __name__ == "__main__":
    f=open("/net/harbinger/data2/bowie/UCLCHEM/src/Makefile","r")
    for line in f:
        if line.startswith("PHYSICS="):
            module=line[8:-5]
    if module=="cshock":
        name = "C"
    elif module =="jshock":
        name = "J"
    else:
        name = module
    print(name)
    f.close()

    rungrid()	#plotshocks(40,1e5)
    #avgAbundance()
    print("computation took {} s".format(tm.time()-start))
    """server=sp.SMTP("localhost")
    server.set_debuglevel(1)
    server.sendmail(sender,rcvr,"1 done after {} s".format(tm.time()-start))
    server.close()"""